syntax = "proto3";

package garrison_server;

service GarrisonServer {
    rpc key_set(KeySetRequest) returns (KeySetResponse) {}
    rpc key_get(KeyGetRequest) returns (KeyGetResponse) {}
    rpc key_delete(KeyDeleteRequest) returns (KeyDeleteResponse) {}
    rpc queue_pop(QueuePopRequest) returns (QueuePopResponse) {}
    rpc queue_push(QueuePushRequest) returns (QueuePushResponse) {}
    rpc queue_delete(QueueDeleteRequest) returns (QueueDeleteResponse) {}
    rpc queue_length(QueueLengthRequest) returns (QueueLengthResponse) {}
}


message KeySetRequest {
    bytes key = 1;
    bytes value = 2;
}


message KeySetResponse {
    bool key_was_set = 1;
    bool key_is_new = 2;
}


message KeyGetRequest {
    bytes key = 1;
}


message KeyGetResponse {
    bool key_exists = 1;
    bytes value = 2;
}


message KeyDeleteRequest {
    bytes key = 1;
}


message KeyDeleteResponse {
    bool success = 1;
}


message QueuePopRequest {
    string queue_name = 1;
    uint64 number_of_items = 2;
}


message QueuePopResponse {
    repeated bytes items = 1;
}


message QueuePushRequest {
    string queue_name = 1;
    string priority = 2;
    repeated bytes items = 3;
}


message QueuePushResponse {
    bool success = 1;
}


message QueueDeleteRequest {
    string queue_name = 1;
}


message QueueDeleteResponse {
    bool success = 1;
}


message QueueLengthRequest {
    string queue_name = 1;
}


message QueueLengthResponse {
    uint64 queue_length = 1;
}
